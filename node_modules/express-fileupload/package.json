{
  "_args": [
    [
      {
        "raw": "express-fileupload",
        "scope": null,
        "escapedName": "express-fileupload",
        "name": "express-fileupload",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Ardeshir\\IdeaProjects\\englishAcademi"
    ]
  ],
  "_from": "express-fileupload",
  "_hasShrinkwrap": false,
  "_id": "express-fileupload@1.0.0",
  "_location": "/express-fileupload",
  "_nodeVersion": "8.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/express-fileupload_1.0.0_1539875426780_0.06859086693336591"
  },
  "_npmUser": {
    "name": "richardgirges",
    "email": "richardgirges@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "express-fileupload",
    "scope": null,
    "escapedName": "express-fileupload",
    "name": "express-fileupload",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-fileupload/-/express-fileupload-1.0.0.tgz",
  "_shasum": "3e295cffe1e76258e46fd63c3bc17307ba0aeac0",
  "_shrinkwrap": null,
  "_spec": "express-fileupload",
  "_where": "C:\\Users\\Ardeshir\\IdeaProjects\\englishAcademi",
  "author": {
    "name": "Richard Girges",
    "email": "richardgirges@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/richardgirges/express-fileupload/issues"
  },
  "dependencies": {
    "busboy": "^0.2.14",
    "md5": "^2.2.1",
    "streamifier": "^0.1.1"
  },
  "description": "Simple express file upload middleware that wraps around Busboy",
  "devDependencies": {
    "body-parser": "^1.18.3",
    "coveralls": "^3.0.2",
    "eslint": "^5.6.0",
    "express": "^4.16.3",
    "istanbul": "^0.4.5",
    "mocha": "^5.2.0",
    "rimraf": "^2.6.2",
    "supertest": "^3.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-6VS9MiPIXXFFKv5+cRS5+iMh3Zw6KadiSEM+SPRMSC3AEoV3ZOfRUk3ogjDtKVr4o9n3EoHTMyyqbuzBj8gMLw==",
    "shasum": "3e295cffe1e76258e46fd63c3bc17307ba0aeac0",
    "tarball": "https://registry.npmjs.org/express-fileupload/-/express-fileupload-1.0.0.tgz",
    "fileCount": 25,
    "unpackedSize": 1163756,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbyKJjCRA9TVsSAnZWagAAsWUQAJAYTr16baVsGkS9Row2\nwHk1Uk89FjQwvWkWZ0hTfLH1oVLABpZgxDXd+Kiad6dIPAXEpcSjma2Mnt/q\nfR9PIiGWLyZaP50s+HpAH4UkUp1F77AMoLwEZ7iNrkdJjSCtSFhTHdHI+GGQ\nDVw/0CVntZS9w4R2uIr81/+RAE92dFcQx2grft7DOutq+QBR6tuqdnKenYSc\n+ci3D++1DqsrlhN//NMCM6qSaEaVMMhPrdGSp6ew5dXStd56ssk3kTmZYh1t\nX2JWNK85+Z5KbzJIVIrlIwQ/4n/tbihfdMtRGfyxhVg791K/ch8VB6PVDT9+\n6Q+bljcmaZbsVMOKRxvI4UMWiNPs/Jka/fhnsl65Iaor+BPXeIoOwUsG/ydN\nRjWiBEmvN/EWAbI2JNweqJXPUeOHTWmY5B2qIQN4AACE7EvR7YDVL3/9p2MZ\nqMyl61ycU2drf87axYsd6NaCEEZX7vFgMzx+ZBv1LN1mNu+glhcjp1Q1KjRm\nZpalgqW745jYNqE4Ew8gTEtXnR5yVLzSDhfWFFGPc2WqBjGqVvvlb28EW+T+\nMWn+gSqqPwQAYZ6WxMY+f9Ts9CKPEeTcq8FsapYj43ae7vbZ+6M05Iz7Vq6S\n8urnvEb7VQwOwn/tqpxKXJVn3BwlH64628ZscuQj7Qgv66sXjlchMw+E5mBX\nmcYc\r\n=Q6f/\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "b93e40301e2c2a2b186c7b6cfd1d16af5b2d8005",
  "homepage": "https://github.com/richardgirges/express-fileupload#readme",
  "keywords": [
    "express",
    "file-upload",
    "upload",
    "forms",
    "multipart",
    "files",
    "busboy",
    "middleware"
  ],
  "license": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "richardgirges",
      "email": "richardgirges@gmail.com"
    }
  ],
  "name": "express-fileupload",
  "optionalDependencies": {},
  "readme": "# express-fileupload\nSimple express middleware for uploading files.\n\n[![npm](https://img.shields.io/npm/v/express-fileupload.svg)](https://www.npmjs.org/package/express-fileupload)\n[![Build Status](https://travis-ci.org/richardgirges/express-fileupload.svg?branch=master)](https://travis-ci.org/richardgirges/express-fileupload)\n[![downloads per month](http://img.shields.io/npm/dm/express-fileupload.svg)](https://www.npmjs.org/package/express-fileupload)\n[![Coverage Status](https://img.shields.io/coveralls/richardgirges/express-fileupload.svg)](https://coveralls.io/r/richardgirges/express-fileupload)\n\n# Version 1.0.0 Breaking Changes\nBreaking change to `md5` handling. [Read about it here.](https://github.com/richardgirges/express-fileupload/releases/tag/v1.0.0-alpha.1)\n\n# Install\n```bash\n# With NPM\nnpm install --save express-fileupload\n\n# With Yarn\nyarn add express-fileupload\n```\n\n# Usage\nWhen you upload a file, the file will be accessible from `req.files`.\n\nExample:\n* You're uploading a file called **car.jpg**\n* Your input's name field is **foo**: `<input name=\"foo\" type=\"file\" />`\n* In your express server request, you can access your uploaded file from `req.files.foo`:\n```javascript\napp.post('/upload', function(req, res) {\n  console.log(req.files.foo); // the uploaded file object\n});\n```\n\nThe **req.files.foo** object will contain the following:\n* `req.files.foo.name`: \"car.jpg\"\n* `req.files.foo.mv`: A function to move the file elsewhere on your server\n* `req.files.foo.mimetype`: The mimetype of your file\n* `req.files.foo.data`: A buffer representation of your file\n* `req.files.foo.truncated`: A boolean that represents if the file is over the size limit\n* `req.files.foo.md5`: A function that returns an MD5 checksum of the uploaded file\n\n### Examples\n* [Example Project](https://github.com/richardgirges/express-fileupload/tree/master/example)\n* [Basic File Upload](https://github.com/richardgirges/express-fileupload/tree/master/example#basic-file-upload)\n* [Multi-File Upload](https://github.com/richardgirges/express-fileupload/tree/master/example#multi-file-upload)\n\n### Using Busboy Options\nPass in Busboy options directly to the express-fileupload middleware. [Check out the Busboy documentation here.](https://github.com/mscdex/busboy#api)\n\n```javascript\napp.use(fileUpload({\n  limits: { fileSize: 50 * 1024 * 1024 },\n}));\n```\n\n### Available Options\nPass in non-Busboy options directly to the middleware. These are express-fileupload specific options.\n\nOption | Acceptable&nbsp;Values | Details\n--- | --- | ---\ncreateParentPath | <ul><li><code>false</code>&nbsp;**(default)**</li><li><code>true</code></ul> | Automatically creates the directory path specified in `.mv(filePathName)`\nsafeFileNames | <ul><li><code>false</code>&nbsp;**(default)**</li><li><code>true</code></li><li>regex</li></ul> | Strips characters from the upload's filename. You can use custom regex to determine what to strip. If set to `true`, non-alphanumeric characters _except_ dashes and underscores will be stripped. This option is off by default.<br /><br />**Example #1 (strip slashes from file names):** `app.use(fileUpload({ safeFileNames: /\\\\/g }))`<br />**Example #2:** `app.use(fileUpload({ safeFileNames: true }))`\npreserveExtension | <ul><li><code>false</code>&nbsp;**(default)**</li><li><code>true</code></li><li><code>*Number*</code></li></ul> | Preserves filename extension when using <code>safeFileNames</code> option. If set to <code>true</code>, will default to an extension length of 3. If set to <code>*Number*</code>, this will be the max allowable extension length. If an extension is smaller than the extension length, it remains untouched. If the extension is longer, it is shifted.<br /><br />**Example #1 (true):**<br /><code>app.use(fileUpload({ safeFileNames: true, preserveExtension: true }));</code><br />*myFileName.ext* --> *myFileName.ext*<br /><br />**Example #2 (max extension length 2, extension shifted):**<br /><code>app.use(fileUpload({ safeFileNames: true, preserveExtension: 2 }));</code><br />*myFileName.ext* --> *myFileNamee.xt*\nabortOnLimit | <ul><li><code>false</code>&nbsp;**(default)**</li><li><code>true</code></ul> | Returns a HTTP 413 when the file is bigger than the size limit if true. Otherwise, it will add a <code>truncate = true</code> to the resulting file structure.\n\n# Help Wanted\nPull Requests are welcomed!\n\n# Thanks & Credit\n[Brian White](https://github.com/mscdex) for his stellar work on the [Busboy Package](https://github.com/mscdex/busboy) and the [connect-busboy Package](https://github.com/mscdex/connect-busboy)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/richardgirges/express-fileupload.git"
  },
  "scripts": {
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "lint": "eslint ./",
    "test": "istanbul cover _mocha -- -R spec"
  },
  "version": "1.0.0"
}
