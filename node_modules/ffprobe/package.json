{
  "_args": [
    [
      {
        "raw": "ffprobe",
        "scope": null,
        "escapedName": "ffprobe",
        "name": "ffprobe",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Ardeshir\\IdeaProjects\\englishAcademi"
    ]
  ],
  "_from": "ffprobe@latest",
  "_id": "ffprobe@1.1.0",
  "_inCache": true,
  "_location": "/ffprobe",
  "_nodeVersion": "0.12.7",
  "_npmUser": {
    "name": "eugeneware",
    "email": "eugene@noblesamurai.com"
  },
  "_npmVersion": "3.4.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ffprobe",
    "scope": null,
    "escapedName": "ffprobe",
    "name": "ffprobe",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ffprobe/-/ffprobe-1.1.0.tgz",
  "_shasum": "f64f0ea44e33c80fc1f7aefe31fc4b3707d2acce",
  "_shrinkwrap": null,
  "_spec": "ffprobe",
  "_where": "C:\\Users\\Ardeshir\\IdeaProjects\\englishAcademi",
  "author": {
    "name": "Eugene Ware",
    "email": "eugene@noblesamurai.com"
  },
  "bugs": {
    "url": "https://github.com/eugeneware/ffprobe/issues"
  },
  "dependencies": {
    "JSONStream": "^1.0.7",
    "bl": "^1.0.0",
    "deferential": "^1.0.0"
  },
  "description": "Use ffprobe to get info from media files and return as JSON",
  "devDependencies": {
    "expect.js": "~0.3.0",
    "ffprobe-static": "^1.1.0",
    "mocha": "~2.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "f64f0ea44e33c80fc1f7aefe31fc4b3707d2acce",
    "tarball": "https://registry.npmjs.org/ffprobe/-/ffprobe-1.1.0.tgz"
  },
  "gitHead": "8ab490e3160ffbfb866d9ee0e7798a941f901112",
  "homepage": "https://github.com/eugeneware/ffprobe#readme",
  "keywords": [
    "json",
    "ffmpeg",
    "ffprobe",
    "media",
    "video",
    "audio",
    "image",
    "images"
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "eugeneware",
      "email": "eugene@noblesamurai.com"
    }
  ],
  "name": "ffprobe",
  "optionalDependencies": {},
  "readme": "# ffprobe\n\nUse ffprobe to get info from media files and return as JSON\n\n[![build status](https://secure.travis-ci.org/eugeneware/ffprobe.png)](http://travis-ci.org/eugeneware/ffprobe)\n\n## Installation\n\nThis module is installed via npm:\n\n``` bash\n$ npm install ffprobe\n```\n\n## Example Usage\n\n`ffprobe` is a *dual* API, supporting both node.js callbacks *AND* `Promise`s.\n\n### Callback API\nList the output of ffprobe for a media file in a convenient JSON format:\n\n``` js\nvar ffprobe = require('ffprobe'),\n    ffprobeStatic = require('ffprobe-static');\n\nffprobe('./file.mp4', { path: ffprobeStatic.path }, function (err, info) {\n  if (err) return done(err);\n  console.log(info);\n/***\n{\n    \"streams\": [\n        {\n            \"index\": 0,\n            \"codec_name\": \"h264\",\n            \"codec_long_name\": \"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\",\n            \"profile\": \"High\",\n            \"codec_type\": \"video\",\n            \"codec_time_base\": \"1/50\",\n            \"codec_tag_string\": \"avc1\",\n            \"codec_tag\": \"0x31637661\",\n            \"width\": 1280,\n            \"height\": 720,\n            \"coded_width\": 1280,\n            \"coded_height\": 720,\n            \"has_b_frames\": 0,\n            \"sample_aspect_ratio\": \"1:1\",\n            \"display_aspect_ratio\": \"16:9\",\n            \"pix_fmt\": \"yuv420p\",\n            \"level\": 31,\n            \"chroma_location\": \"left\",\n            \"refs\": 1,\n            \"is_avc\": \"1\",\n            \"nal_length_size\": \"4\",\n            \"r_frame_rate\": \"25/1\",\n            \"avg_frame_rate\": \"25/1\",\n            \"time_base\": \"1/25\",\n            \"start_pts\": 0,\n            \"start_time\": \"0.000000\",\n            \"duration_ts\": 299,\n            \"duration\": \"11.960000\",\n            \"bit_rate\": \"1031739\",\n            \"bits_per_raw_sample\": \"8\",\n            \"nb_frames\": \"299\",\n            \"disposition\": {\n                \"default\": 1,\n                \"dub\": 0,\n                \"original\": 0,\n                \"comment\": 0,\n                \"lyrics\": 0,\n                \"karaoke\": 0,\n                \"forced\": 0,\n                \"hearing_impaired\": 0,\n                \"visual_impaired\": 0,\n                \"clean_effects\": 0,\n                \"attached_pic\": 0\n            },\n            \"tags\": {\n                \"language\": \"und\",\n                \"handler_name\": \"VideoHandler\"\n            }\n        },\n        {\n            \"index\": 1,\n            \"codec_name\": \"aac\",\n            \"codec_long_name\": \"AAC (Advanced Audio Coding)\",\n            \"profile\": \"LC\",\n            \"codec_type\": \"audio\",\n            \"codec_time_base\": \"1/44100\",\n            \"codec_tag_string\": \"mp4a\",\n            \"codec_tag\": \"0x6134706d\",\n            \"sample_fmt\": \"fltp\",\n            \"sample_rate\": \"44100\",\n            \"channels\": 2,\n            \"channel_layout\": \"stereo\",\n            \"bits_per_sample\": 0,\n            \"r_frame_rate\": \"0/0\",\n            \"avg_frame_rate\": \"0/0\",\n            \"time_base\": \"1/44100\",\n            \"start_pts\": 0,\n            \"start_time\": \"0.000000\",\n            \"duration_ts\": 528384,\n            \"duration\": \"11.981497\",\n            \"bit_rate\": \"192287\",\n            \"max_bit_rate\": \"203120\",\n            \"nb_frames\": \"516\",\n            \"disposition\": {\n                \"default\": 1,\n                \"dub\": 0,\n                \"original\": 0,\n                \"comment\": 0,\n                \"lyrics\": 0,\n                \"karaoke\": 0,\n                \"forced\": 0,\n                \"hearing_impaired\": 0,\n                \"visual_impaired\": 0,\n                \"clean_effects\": 0,\n                \"attached_pic\": 0\n            },\n            \"tags\": {\n                \"creation_time\": \"2015-11-16 00:48:42\",\n                \"language\": \"eng\",\n                \"handler_name\": \"IsoMedia File Produced by Google, 5-11-2011\"\n            }\n        }\n    ]\n}\n **/\n});\n```\n\n### Promise API\nList the output of ffprobe for a media file in a convenient JSON format:\n\n``` js\nvar ffprobe = require('ffprobe'),\n    ffprobeStatic = require('ffprobe-static');\n\nffprobe('./file.mp4', { path: ffprobeStatic.path })\n  .then(function (info) {\n    console.log(info);\n    /***\n    {\n        \"streams\": [\n            {\n                \"index\": 0,\n                \"codec_name\": \"h264\",\n                \"codec_long_name\": \"H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10\",\n                \"profile\": \"High\",\n\n                ...\n                }\n            }\n        ]\n    }\n     **/\n  })\n  .catch(function (err) {\n    console.error(err);\n  })\n});\n```\n\n## API\n\n### `ffprobe(mediaFilePath, opts, [cb])`\n\n* `mediaFilePath` - path to your audio / video / image that you want to get media\n  info for.\n* `opts` - options object with the following options:\n  * `path` - path to ffprobe binary (You can use\n    [`ffprobe-static`](https://github.com/joshwnj/ffprobe-static) to easily get\n    a static binary that you can install with npm.\n* `cb(err, info)` - standard callback, with the info returned as a javascript\n  object. NB: If the `cb` parameter is not provided, a `Promise` will be returned\n  allowing chained `then()`, `catch()` methods.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eugeneware/ffprobe.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.1.0"
}
